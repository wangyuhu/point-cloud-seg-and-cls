Pointnet classification baseline:
    数据集：Shapenet，ModelNet40
	相关参数：
		Project path: 152 /home/wangyuhu/tmp/pycharm_project_995/pointnet.pytorch
		
		CUDA_VISIBLE_DEVICES=4 python train_classification.py --dataset ../data/shapenetcore_partanno_segmentation_benchmark_v0 --nepoch 200 
		
		Batch:32 num_points:2500 data_type:shapenet feature_trainformed:ture

	9Øit [00:16, 5.Ø3it/s]
    final accuracy 0.9718162839248434
	
	Trained_model path:/Users/xiaohu/Documents/Pycharm_server/152/pointnet.pytorch/utils/cls/cls_model.pth
	
	wang yuhu 于 2020/2/7 下午2:43 修改

Pointnet segmentation baseline:
	相关参数：
		Project path: 152 /home/wangyuhu/tmp/pycharm_project_995/pointnet.pytorch
		
		CUDA_VISIBLE_DEVICES=4 python train_segmentation.py --dataset ../data/shapenetcore_partanno_segmentation_benchmark_v0 --nepoch 20 
		
		其他参数均为代码默认设置
	Trained_model path: /home/wangyuhu/tmp/pycharm_project_995/pointnet.pytorch/utils/seg/seg_model.pth
	
	22it [00:04, 5.Ø5it/s]
    mlOU for class Chair: O. 7441568068800666
    
	wang yuhu 于 2020/2/7 下午9:43 修改

Pointnet 代码解读：
	train_classification.py:
        python中的lambda函数；
        torch.manual_seed(args.seed) #为CPU设置种子用于生成随机数，以使得结果是确定的
        整个训练基本过程：
            optimizer.zero_grad()
            classifier = classifier.train()
            pred, trans, trans_feat = classifier(points)
            loss = F.nll_loss(pred, target)
            loss.backward()
            optimizer.step()
	dataset.py:
		用于数据读取，这里是shapenet
	model.py:
	    class PointNetCls(nn.Module)
	        调用class PointNetfeat，其主体为point tran接conv接feature tran接conv接全连接网络；
	            stn3d用于point trans，stnkn用于feature tran;

Pointnet++:
    数据集：ModelNet40
    需要CUDA=9.0的环境，需要进行环境的重新配置，适当延后

SplatNet:
    还需要详细阅读有关BCL方面的内容；

下阶段任务：
	看下一篇论文；
	根据pointnet,做一些小实验。
	